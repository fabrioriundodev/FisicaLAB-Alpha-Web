---
interface Props {
  errorType?: 'load' | 'network' | 'general'
  message?: string
}

const { errorType = 'general', message } = Astro.props

const errorMessages = {
  load: '¡Ups! No pudimos cargar este contenido',
  network: '¡Ups! Problemas de conexión',
  general: '¡Ups! Algo salió mal'
}

const errorDescriptions = {
  load: 'Este contenido no está disponible en este momento. Por favor, intenta recargar la página.',
  network: 'Parece que hay un problema con tu conexión a internet. Verifica tu conexión e intenta de nuevo.',
  general: 'Ocurrió un error inesperado. Estamos trabajando para solucionarlo.'
}
---

<div class="error-boundary">
  <div class="error-content">
    <div class="error-icon">⚠️</div>
    <h3 class="error-title">{errorMessages[errorType]}</h3>
    <p class="error-description">
      {message || errorDescriptions[errorType]}
    </p>
    <button 
      onclick="location.reload()" 
      class="error-button"
    >
      🔄 Reintentar
    </button>
  </div>
</div>

<style>
  .error-boundary {
    padding: 3rem 1.5rem;
    background: var(--color-light);
    border: 2px dashed var(--color-border);
    border-radius: var(--radius-lg);
    text-align: center;
    margin: 2rem 0;
  }
  
  .error-content {
    max-width: 500px;
    margin: 0 auto;
  }
  
  .error-icon {
    font-size: 4rem;
    margin-bottom: 1rem;
  }
  
  .error-title {
    font-size: 1.5rem;
    font-weight: bold;
    color: var(--color-text);
    margin-bottom: 0.5rem;
  }
  
  .error-description {
    color: var(--color-text-muted);
    margin-bottom: 1.5rem;
  }
  
  .error-button {
    background: var(--color-primary);
    color: white;
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: var(--radius-md);
    cursor: pointer;
    font-size: 1rem;
    transition: transform 0.2s;
  }
  
  .error-button:hover {
    transform: scale(1.05);
  }
</style>